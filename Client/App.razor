@using Microsoft.AspNetCore.Components.WebAssembly.Services;
@using System.Reflection;
@inject LazyAssemblyLoader _lazyLoader;

<Router AppAssembly="@typeof(App).Assembly" OnNavigateAsync="OnNavigateAsync">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
        <FocusOnNavigate RouteData="@routeData" Selector="h1" />
    </Found>
    <NotFound>
        <PageTitle>Not found</PageTitle>
        <LayoutView Layout="@typeof(MainLayout)">
            <CustomNotFound/>
        </LayoutView>
    </NotFound>
</Router>

@code {
    private List<Assembly> LazyLoadedAssemblies = new List<Assembly>();
    private async Task OnNavigateAsync(NavigationContext args)
    {

        if (args.Path.EndsWith("counter"))
        {
            var assemblies = await _lazyLoader.LoadAssembliesAsync(new List<string> { "MathNet.Numerics.dll"});
            LazyLoadedAssemblies.AddRange(assemblies);
        }

    }
}
